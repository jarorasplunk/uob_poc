{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_6",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_18_to_port_19",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_19_to_port_22",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_22_to_port_26",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_26_to_port_1",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_22_to_port_29",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_29_to_port_1",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_6_to_port_18",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_22_to_port_30",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_30_to_port_1",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "0d55163facd5546867c1f6ecea936599584e2f4f",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 19.999999999999986,
                    "y": -100.00000000000023
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 19.999999999999986,
                    "y": 888
                },
                "18": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk_result_internal"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "run_query_2",
                        "id": "18",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "command": "search",
                            "query": "index=botsv* sourcetype=pan:traffic | lookup local_ip_soar_poc ip as dest OUTPUT threat_key ip as match | search threat_key = ip |table _time src dest threat_key match | dedup match | table match",
                            "start_time": "-3d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 296
                },
                "19": {
                    "data": {
                        "advanced": {
                            "drop_none": true,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "format_4",
                        "id": "19",
                        "parameters": [
                            "run_query_2:action_result.data"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "format",
                    "warnings": {},
                    "x": 0,
                    "y": 444
                },
                "22": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_extract_ipv4",
                            "repoName": "community"
                        },
                        "functionId": 8,
                        "functionName": "regex_extract_ipv4_8",
                        "id": "22",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_extract_ipv4": {
                                "description": "Takes a single input and extracts all IPv4 addresses from it using regex.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "An input string that may contain an arbitrary number of ipv4 addresses",
                                        "inputType": "item",
                                        "label": "input_string",
                                        "name": "input_string",
                                        "placeholder": "192.0.2.1",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_extract_ipv4",
                                "name": "regex_extract_ipv4"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_extract_ipv4": {
                                "input_string": "format_4:formatted_data.*"
                            }
                        }
                    },
                    "errors": {},
                    "id": "22",
                    "type": "utility",
                    "warnings": {},
                    "x": 0,
                    "y": 592
                },
                "26": {
                    "data": {
                        "action": "ip reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "VirusTotal v3",
                        "connectorConfigs": [
                            "soar_poc_virustotal"
                        ],
                        "connectorId": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "ip_reputation_1",
                        "id": "26",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "ip": "regex_extract_ipv4_8:custom_function_result.data.extracted_ipv4"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "ip"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "action",
                    "warnings": {},
                    "x": -180,
                    "y": 740
                },
                "29": {
                    "data": {
                        "action": "whois ip",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "WHOIS",
                        "connectorConfigs": [
                            "whois"
                        ],
                        "connectorId": "e6723c2e-06ef-415a-8098-62c46c1cb71f",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "whois_ip_1",
                        "id": "29",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "ip": "regex_extract_ipv4_8:custom_function_result.data.extracted_ipv4"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "ip"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "29",
                    "type": "action",
                    "warnings": {},
                    "x": 120,
                    "y": 740
                },
                "30": {
                    "data": {
                        "action": "geolocate ip",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "MaxMind",
                        "connectorConfigs": [
                            "maxmind"
                        ],
                        "connectorId": "c566e153-3118-4033-abda-14dd9748c91a",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "geolocate_ip_1",
                        "id": "30",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "ip": "regex_extract_ipv4_8:custom_function_result.data.extracted_ipv4"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "ip"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "30",
                    "type": "action",
                    "warnings": {},
                    "x": 420,
                    "y": 740
                },
                "6": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "delayTime": 1.5,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_query_1",
                        "id": "6",
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "attach_result": false,
                            "command": "search",
                            "display": "_time,src,dest,match,threat_key",
                            "query": "index=botsv* sourcetype=pan:traffic | lookup local_ip_soar_poc ip as dest OUTPUT threat_key ip as match | search threat_key = ip |table _time src dest threat_key match",
                            "start_time": "-3d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "action",
                    "warnings": {},
                    "x": 1.4210854715202004e-14,
                    "y": 40
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.1.305"
    },
    "create_time": "2024-04-24T00:19:31.974723+00:00",
    "draft_mode": false,
    "labels": [
        "soar_poc"
    ],
    "tags": []
}