{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "asd",
            "edges": [
                {
                    "id": "port_11_to_port_9",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_16_to_port_17",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_18_to_port_19",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_20_to_port_11",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_20_to_port_16",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_20_to_port_18",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_23_to_port_24",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_9_to_port_23",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "id": "port_0_to_port_20",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_17_to_port_29",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_29_to_port_30",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_19_to_port_31",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_31_to_port_32",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "id": "port_24_to_port_33",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "id": "port_30_to_port_33",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "id": "port_32_to_port_33",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "id": "port_33_to_port_1",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "53f6d9442df5d3af5e4e6b2a07a7d026a5a11b58",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 360,
                    "y": -5.115907697472721e-13
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 380,
                    "y": 1040
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "IP Custom List Format ",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "ip_custom_list_format",
                        "id": "11",
                        "parameters": [
                            "container:start_time"
                        ],
                        "template": "IP Artifacts ",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "format",
                    "warnings": {},
                    "x": 0,
                    "y": 328
                },
                "16": {
                    "data": {
                        "advanced": {
                            "customName": "Domain List Format ",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "domain_list_format",
                        "id": "16",
                        "parameters": [
                            "container:start_time"
                        ],
                        "template": "Domain Artifacts\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "format",
                    "warnings": {},
                    "x": 340,
                    "y": 328
                },
                "17": {
                    "data": {
                        "action": "add listitem",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "add Domain listitem",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "soar_poc_phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "add_domain_listitem",
                        "id": "17",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "create": true,
                            "list": "domain_list_format:formatted_data",
                            "new_row": "artifact:*.cef.destinationDnsDomain"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "list"
                            },
                            {
                                "data_type": "string",
                                "field": "new_row"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "action",
                    "warnings": {},
                    "x": 340,
                    "y": 476
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "MD5 List format",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 7,
                        "functionName": "md5_list_format",
                        "id": "18",
                        "parameters": [
                            "container:start_time"
                        ],
                        "template": "MD5 Hash Artifacts ",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "format",
                    "warnings": {},
                    "x": 680,
                    "y": 328
                },
                "19": {
                    "data": {
                        "action": "add listitem",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "add MD5 listitem",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "soar_poc_phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "add_md5_listitem",
                        "id": "19",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "create": true,
                            "list": "md5_list_format:formatted_data",
                            "new_row": "artifact:*.cef.fileHash"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "list"
                            },
                            {
                                "data_type": "string",
                                "field": "new_row"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "action",
                    "warnings": {},
                    "x": 680,
                    "y": 476
                },
                "20": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "IP Artifact"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.description",
                                        "value": "Artifact added by Parser"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "IP",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Domain Artifact"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "artifact:*.description",
                                        "value": "Artifact added by Parser"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Domain",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Hash Artifact"
                                    },
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "artifact:*.description",
                                        "value": "Artifact added by Parser"
                                    }
                                ],
                                "conditionIndex": 2,
                                "customName": "MD5",
                                "logic": "and"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "filter_2",
                        "id": "20",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "filter",
                    "warnings": {},
                    "x": 400,
                    "y": 148
                },
                "23": {
                    "data": {
                        "advanced": {
                            "customName": "SPL Search put to lookup  local_ip_soar_poc",
                            "customNameId": 0,
                            "drop_none": true,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "spl_search_put_to_lookup_local_ip_soar_poc",
                        "id": "23",
                        "parameters": [
                            "artifact:*.cef.sourceAddress"
                        ],
                        "template": "%%\n|makeresults | eval ip= \"{0}\", threat_key=\"ip\" | table ip threat_key | inputlookup  local_ip_soar_poc.csv append=true | dedup ip threat_key | outputlookup local_ip_soar_poc  \n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "format",
                    "warnings": {},
                    "x": -1.4210854715202004e-14,
                    "y": 624
                },
                "24": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "add to lookup local_ip_soar_poc",
                            "customNameId": 0,
                            "delayTime": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_to_lookup_local_ip_soar_poc",
                        "id": "24",
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "command": "",
                            "query": "spl_search_put_to_lookup_local_ip_soar_poc:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "24",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 788
                },
                "29": {
                    "data": {
                        "advanced": {
                            "customName": "SPL Search put to lookup  local_domain_soar_poc",
                            "customNameId": 0,
                            "drop_none": true,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "spl_search_put_to_lookup_local_domain_soar_poc",
                        "id": "29",
                        "parameters": [
                            "add_domain_listitem:action_result.parameter.new_row"
                        ],
                        "template": "%%\n|makeresults | eval domain= \"{0}\", threat_key=\"domain\" | table domain threat_key | inputlookup  local_domain_soar_poc.csv append=true | dedup domain threat_key | outputlookup local_domain_soar_poc  \n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "29",
                    "type": "format",
                    "warnings": {},
                    "x": 340,
                    "y": 624
                },
                "30": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "add to lookup local_domain_soar_poc",
                            "customNameId": 0,
                            "delayTime": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "add_to_lookup_local_domain_soar_poc",
                        "id": "30",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "command": "",
                            "query": "spl_search_put_to_lookup_local_domain_soar_poc:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "30",
                    "type": "action",
                    "warnings": {},
                    "x": 340,
                    "y": 788
                },
                "31": {
                    "data": {
                        "advanced": {
                            "customName": "SPL Search put to lookup  local_md5_soar_poc",
                            "customNameId": 0,
                            "drop_none": true,
                            "join": []
                        },
                        "functionId": 8,
                        "functionName": "spl_search_put_to_lookup_local_md5_soar_poc",
                        "id": "31",
                        "parameters": [
                            "artifact:*.cef.fileHash"
                        ],
                        "template": "%%\n|makeresults | eval md5= \"{0}\", threat_key=\"md5\" | table md5 threat_key | inputlookup  local_md5_soar_poc.csv append=true | dedup md5 threat_key | outputlookup local_md5_soar_poc  \n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "31",
                    "type": "format",
                    "warnings": {},
                    "x": 680,
                    "y": 624
                },
                "32": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "delayTime": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "run_query_3",
                        "id": "32",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "command": "",
                            "query": "spl_search_put_to_lookup_local_md5_soar_poc:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "action",
                    "warnings": {},
                    "x": 680,
                    "y": 788
                },
                "33": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "noop",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "noop_1",
                        "id": "33",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "noop": {
                                "description": "Do nothing and return nothing. Use this if you want to do something in a custom function setup section or leave a placeholder block in a playbook. This does not sleep or wait and will return as soon as possible.",
                                "fields": [],
                                "label": "noop",
                                "name": "noop"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "noop": {}
                        }
                    },
                    "errors": {},
                    "id": "33",
                    "type": "utility",
                    "warnings": {},
                    "x": 340,
                    "y": 940
                },
                "9": {
                    "data": {
                        "action": "add listitem",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "add IP listitem",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "soar_poc_phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_ip_listitem",
                        "id": "9",
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "create": true,
                            "list": "ip_custom_list_format:formatted_data",
                            "new_row": "artifact:*.cef.sourceAddress"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "list"
                            },
                            {
                                "data_type": "string",
                                "field": "new_row"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 476
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 416,
                "playbook_name": "UOB Use case 2 - Put IOC into custom list and lookuptable Subplaybook",
                "playbook_repo_id": 2,
                "playbook_repo_name": "local"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.1.305"
    },
    "create_time": "2024-04-24T00:19:42.666126+00:00",
    "draft_mode": false,
    "labels": [
        "soar_poc"
    ],
    "tags": []
}