{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_12_to_port_25",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_25_to_port_29",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_6_to_port_7",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_0_to_port_3",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_26",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_0_to_port_12",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_7_to_port_1",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_29_to_port_1",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_26_to_port_31",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_31_to_port_6",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                }
            ],
            "hash": "1945f2d4211a86d47c4a09ea22ffa75308e9afb3",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 380,
                    "y": -7.034373084024992e-13
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 560,
                    "y": 1920
                },
                "12": {
                    "data": {
                        "advanced": {
                            "customName": "filter email artifact",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Email Artifact"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.description",
                                        "value": "Artifact added by MSG File Parser"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Extract Attached MSG Header",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Email Artifact"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "artifact:*.description",
                                        "value": "Artifact added by IMAP"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Extract Reporting Email Header",
                                "logic": "and"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "filter_email_artifact",
                        "id": "12",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "filter",
                    "warnings": {},
                    "x": 220,
                    "y": 1084
                },
                "25": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "vault_list_1"
                            ]
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_extract_email",
                            "repoName": "community"
                        },
                        "functionId": 11,
                        "functionName": "regex_extract_email_11",
                        "id": "25",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_extract_email": {
                                "description": "Provide a string with one or more email addresses in it to be extracted.\nCan be helpful with strings from the To or CC fields of an email: \"<other_email@domain.com>, 'Name' <e-mail@domain.com>\"",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "String containing email addresses",
                                        "inputType": "item",
                                        "label": "input_string",
                                        "name": "input_string",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_extract_email",
                                "name": "regex_extract_email"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_extract_email": {
                                "input_string": "filtered-data:filter_email_artifact:condition_2:artifact:*.cef.emailHeaders.From"
                            }
                        }
                    },
                    "errors": {},
                    "id": "25",
                    "type": "utility",
                    "warnings": {},
                    "x": 340,
                    "y": 1264
                },
                "26": {
                    "data": {
                        "action": "extract email",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "MSG File Parser",
                        "connectorConfigs": [
                            "splunk_poc"
                        ],
                        "connectorId": "e0b31412-4545-43eb-ad86-b1e466b38e7f",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "extract_email_1",
                        "id": "26",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "artifact_name": "Email Artifact",
                            "container_id": "container:id",
                            "run_automation": true,
                            "severity": "medium",
                            "vault_id": "artifact:*.cef.vaultId"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "medium",
                                "field": "severity"
                            },
                            {
                                "data_type": "string",
                                "field": "vault_id"
                            },
                            {
                                "data_type": "string",
                                "default": "Email Artifact",
                                "field": "artifact_name"
                            },
                            {
                                "data_type": "boolean",
                                "default": true,
                                "field": "run_automation"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "action",
                    "warnings": {},
                    "x": 500,
                    "y": 240
                },
                "29": {
                    "data": {
                        "advanced": {
                            "customName": "Email Username",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_split",
                            "repoName": "community"
                        },
                        "functionId": 7,
                        "functionName": "email_username",
                        "id": "29",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_split": {
                                "description": "Use a regular expression to split an input_string into multiple items.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The input string to split.",
                                        "inputType": "item",
                                        "label": "input_string",
                                        "name": "input_string",
                                        "placeholder": "string to split",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The regular expression to use to split the string. Reserved regular expression characters should be escaped with a backslash, so '\\.' will match '.' and '\\\\\\\\' will match '\\'.",
                                        "inputType": "item",
                                        "label": "regex",
                                        "name": "regex",
                                        "placeholder": "[\\s.,;]+",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either True or False to indicate whether or not to remove whitespace before and after each item. Defaults to True",
                                        "inputType": "item",
                                        "label": "strip_whitespace",
                                        "name": "strip_whitespace",
                                        "placeholder": "True",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_split",
                                "name": "regex_split"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_split": {
                                "input_string": "filtered-data:filter_email_artifact:condition_2:artifact:*.cef.emailHeaders.From",
                                "regex": "\\s\\<",
                                "strip_whitespace": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "29",
                    "type": "utility",
                    "warnings": {},
                    "x": 340,
                    "y": 1428
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "vault_list",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "vault_list_1",
                        "id": "3",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "vault_list": {
                                "description": "List all of the vault items based on the provided criteria such as a vault id, container id, and file name. If no inputs provided, it will default to current container. Returns a list of items. May return more variables than listed in outputs.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Optional parameter to filter vault items from this specific container. Defaults to current container if no inputs provided.",
                                        "inputType": "item",
                                        "label": "container_id",
                                        "name": "container_id",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "vault id"
                                        ],
                                        "description": "Optional parameter to filter vault items matching this vault ID. Defaults to None.",
                                        "inputType": "item",
                                        "label": "vault_id",
                                        "name": "vault_id",
                                        "placeholder": "artifact:*.cef.vault_id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Optional parameter to filter vault items matching this file name. Defaults to None.",
                                        "inputType": "item",
                                        "label": "file_name",
                                        "name": "file_name",
                                        "placeholder": "artifact:*.cef.file_name",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "vault_list",
                                "name": "vault_list"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "vault_list": {
                                "container_id": "container:id",
                                "file_name": null,
                                "vault_id": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "3",
                    "type": "utility",
                    "warnings": {},
                    "x": 460,
                    "y": 140
                },
                "31": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_testing_usecase_1_automated_phising_v2_only_notes_subplaybook_1",
                        "id": "31",
                        "inputs": {},
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "testing_usecase_1_automated_phising_v2_only_notes_subplaybook",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "automation",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "31",
                    "type": "playbook",
                    "warnings": {},
                    "x": 500,
                    "y": 364.5
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "debug",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "debug_3",
                        "id": "5",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "debug": {
                                "description": "Print debug messages with the type and value of 0-10 different inputs. This is useful for checking the values of input data or the outputs of other playbook blocks.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "debug",
                                "name": "debug"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "debug": {
                                "input_1": [
                                    "vault_list_1:custom_function_result.data.container_name"
                                ],
                                "input_10": null,
                                "input_2": [
                                    "vault_list_1:custom_function_result.data.file_name"
                                ],
                                "input_3": [
                                    "vault_list_1:custom_function_result.data.vault_id"
                                ],
                                "input_4": [
                                    "vault_list_1:custom_function_result.data.path"
                                ],
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "5",
                    "type": "utility",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 1100,
                    "y": 520
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "filter vault for emails",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": ".msg",
                                        "value": "vault_list_1:custom_function_result.data.file_name"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": ".eml",
                                        "value": "vault_list_1:custom_function_result.data.file_name"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "or"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "filter_vault_for_emails",
                        "id": "6",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "filter",
                    "warnings": {},
                    "x": 790,
                    "y": 296
                },
                "7": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "debug",
                            "repoName": "community"
                        },
                        "functionId": 4,
                        "functionName": "debug_4",
                        "id": "7",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "debug": {
                                "description": "Print debug messages with the type and value of 0-10 different inputs. This is useful for checking the values of input data or the outputs of other playbook blocks.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "debug",
                                "name": "debug"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "debug": {
                                "input_1": [
                                    "filtered-data:filter_vault_for_emails:condition_1:vault_list_1:custom_function_result.data.vault_id"
                                ],
                                "input_10": null,
                                "input_2": [
                                    "filtered-data:filter_vault_for_emails:condition_1:vault_list_1:custom_function_result.data.file_name"
                                ],
                                "input_3": null,
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "7",
                    "type": "utility",
                    "warnings": {},
                    "x": 730,
                    "y": 624
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 654,
                "playbook_name": "testing_usecase_1_automated_phising_v2_copy_not_working",
                "playbook_repo_id": 2,
                "playbook_repo_name": "local"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.1.305"
    },
    "create_time": "2024-04-24T00:10:27.730590+00:00",
    "draft_mode": false,
    "labels": [
        "soar_poc_phishing"
    ],
    "tags": []
}